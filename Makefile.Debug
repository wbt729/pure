#############################################################################
# Makefile for building: pure
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon May 21 16:23:45 2012
# Project:  pure.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -Idebug -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu
LIBS          = $(SUBLIBS)  -L/usr/lib /usr/lib/libopencv_core.so /usr/lib/libopencv_highgui.so /usr/lib/libqwt.so /usr/lib/libopencv_objdetect.so /usr/lib/libfftw3f.so /usr/lib/libfftw3.so /usr/lib/libopencv_imgproc.so.2.4 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = imagelabel.cpp \
		meanplot.cpp \
		fftwidget.cpp \
		signalprocessor.cpp \
		tracker.cpp \
		imageprocessor.cpp \
		grabber.cpp \
		main.cpp \
		pure.cpp debug/moc_imagelabel.cpp \
		debug/moc_meanplot.cpp \
		debug/moc_fftwidget.cpp \
		debug/moc_signalprocessor.cpp \
		debug/moc_tracker.cpp \
		debug/moc_imageprocessor.cpp \
		debug/moc_grabber.cpp \
		debug/moc_pure.cpp
OBJECTS       = debug/imagelabel.o \
		debug/meanplot.o \
		debug/fftwidget.o \
		debug/signalprocessor.o \
		debug/tracker.o \
		debug/imageprocessor.o \
		debug/grabber.o \
		debug/main.o \
		debug/pure.o \
		debug/moc_imagelabel.o \
		debug/moc_meanplot.o \
		debug/moc_fftwidget.o \
		debug/moc_signalprocessor.o \
		debug/moc_tracker.o \
		debug/moc_imageprocessor.o \
		debug/moc_grabber.o \
		debug/moc_pure.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/debug_and_release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/build_pass.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		pure.pro
QMAKE_TARGET  = pure
DESTDIR       = 
TARGET        = pure

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET): ui_pure.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug pure.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/pure1.0.0 || $(MKDIR) debug/pure1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/pure1.0.0/ && $(COPY_FILE) --parents imagelabel.h meanplot.h fftwidget.h signalprocessor.h tracker.h imageprocessor.h grabber.h pure.h debug/pure1.0.0/ && $(COPY_FILE) --parents imagelabel.cpp meanplot.cpp fftwidget.cpp signalprocessor.cpp tracker.cpp imageprocessor.cpp grabber.cpp main.cpp pure.cpp debug/pure1.0.0/ && $(COPY_FILE) --parents pure.ui debug/pure1.0.0/ && (cd `dirname debug/pure1.0.0` && $(TAR) pure1.0.0.tar pure1.0.0 && $(COMPRESS) pure1.0.0.tar) && $(MOVE) `dirname debug/pure1.0.0`/pure1.0.0.tar.gz . && $(DEL_FILE) -r debug/pure1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_imagelabel.cpp debug/moc_meanplot.cpp debug/moc_fftwidget.cpp debug/moc_signalprocessor.cpp debug/moc_tracker.cpp debug/moc_imageprocessor.cpp debug/moc_grabber.cpp debug/moc_pure.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_imagelabel.cpp debug/moc_meanplot.cpp debug/moc_fftwidget.cpp debug/moc_signalprocessor.cpp debug/moc_tracker.cpp debug/moc_imageprocessor.cpp debug/moc_grabber.cpp debug/moc_pure.cpp
debug/moc_imagelabel.cpp: imagelabel.h
	/usr/bin/moc $(DEFINES) $(INCPATH) imagelabel.h -o debug/moc_imagelabel.cpp

debug/moc_meanplot.cpp: meanplot.h
	/usr/bin/moc $(DEFINES) $(INCPATH) meanplot.h -o debug/moc_meanplot.cpp

debug/moc_fftwidget.cpp: fftwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fftwidget.h -o debug/moc_fftwidget.cpp

debug/moc_signalprocessor.cpp: signalprocessor.h
	/usr/bin/moc $(DEFINES) $(INCPATH) signalprocessor.h -o debug/moc_signalprocessor.cpp

debug/moc_tracker.cpp: tracker.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tracker.h -o debug/moc_tracker.cpp

debug/moc_imageprocessor.cpp: tracker.h \
		imageprocessor.h
	/usr/bin/moc $(DEFINES) $(INCPATH) imageprocessor.h -o debug/moc_imageprocessor.cpp

debug/moc_grabber.cpp: grabber.h
	/usr/bin/moc $(DEFINES) $(INCPATH) grabber.h -o debug/moc_grabber.cpp

debug/moc_pure.cpp: ui_pure.h \
		fftwidget.h \
		imagelabel.h \
		meanplot.h \
		grabber.h \
		imagedisplay.h \
		imageprocessor.h \
		tracker.h \
		signalprocessor.h \
		pure.h
	/usr/bin/moc $(DEFINES) $(INCPATH) pure.h -o debug/moc_pure.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_pure.h
compiler_uic_clean:
	-$(DEL_FILE) ui_pure.h
ui_pure.h: pure.ui \
		fftwidget.h \
		meanplot.h \
		imagelabel.h
	/usr/bin/uic pure.ui -o ui_pure.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

debug/imagelabel.o: imagelabel.cpp imagelabel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/imagelabel.o imagelabel.cpp

debug/meanplot.o: meanplot.cpp meanplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/meanplot.o meanplot.cpp

debug/fftwidget.o: fftwidget.cpp fftwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/fftwidget.o fftwidget.cpp

debug/signalprocessor.o: signalprocessor.cpp signalprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/signalprocessor.o signalprocessor.cpp

debug/tracker.o: tracker.cpp tracker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/tracker.o tracker.cpp

debug/imageprocessor.o: imageprocessor.cpp imageprocessor.h \
		tracker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/imageprocessor.o imageprocessor.cpp

debug/grabber.o: grabber.cpp grabber.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/grabber.o grabber.cpp

debug/main.o: main.cpp pure.h \
		ui_pure.h \
		fftwidget.h \
		imagelabel.h \
		meanplot.h \
		grabber.h \
		imagedisplay.h \
		imageprocessor.h \
		tracker.h \
		signalprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/pure.o: pure.cpp pure.h \
		ui_pure.h \
		fftwidget.h \
		imagelabel.h \
		meanplot.h \
		grabber.h \
		imagedisplay.h \
		imageprocessor.h \
		tracker.h \
		signalprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/pure.o pure.cpp

debug/moc_imagelabel.o: debug/moc_imagelabel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_imagelabel.o debug/moc_imagelabel.cpp

debug/moc_meanplot.o: debug/moc_meanplot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_meanplot.o debug/moc_meanplot.cpp

debug/moc_fftwidget.o: debug/moc_fftwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_fftwidget.o debug/moc_fftwidget.cpp

debug/moc_signalprocessor.o: debug/moc_signalprocessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_signalprocessor.o debug/moc_signalprocessor.cpp

debug/moc_tracker.o: debug/moc_tracker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_tracker.o debug/moc_tracker.cpp

debug/moc_imageprocessor.o: debug/moc_imageprocessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_imageprocessor.o debug/moc_imageprocessor.cpp

debug/moc_grabber.o: debug/moc_grabber.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_grabber.o debug/moc_grabber.cpp

debug/moc_pure.o: debug/moc_pure.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_pure.o debug/moc_pure.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

